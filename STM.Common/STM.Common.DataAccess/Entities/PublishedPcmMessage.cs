///////////////////////////////////////////////////////////
//  PublishedMessages.cs
//  Implementation of the Class PublishedMessages
//  Generated by Enterprise Architect
//  Created on:      18-nov-2016 13:06:43
//  Original author: M02AMIOL
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.ComponentModel.DataAnnotations;

namespace STM.Common.DataAccess.Entities
{

    	/// <summary>
	/// Contains published messages from STM Module (e.g. routes in RTZ)
	/// </summary>
    public class PublishedPcmMessage
    {

        /// <summary>
        /// Unique internal ID
        /// </summary>
        [Required]
        public long ID { get; set; }

        /// <summary>
        /// The actual message in raw format
        /// </summary>
        [Required]
        public byte[] Message { get; set; }

        /// <summary>
        /// Identity of the message (extracted from the message). In case of voyage plan
        /// it's the UVID.
        /// </summary>
        [Required]
        public string MessageID { get; set; }

        /// <summary>
        /// Time of update of the message (extracted from the message)
        /// </summary>
        public DateTime? MessageLastUpdateTime { get; set; }

        /// <summary>
        /// Type of message (enumeration)
        /// </summary>
        [Required]
        public virtual MessageType MessageType { get; set; }

        public DateTime? MessageValidFrom { get; set; }

        public DateTime? MessageValidTo { get; set; }

        /// <summary>
        /// Publish time to SPIS (set by SPIS when received)
        /// </summary>
        public DateTime PublishTime { get; set; }

    }//end PublishedMessages
}